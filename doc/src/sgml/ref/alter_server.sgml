<!--
doc/src/sgml/ref/alter_server.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterserver">
 <indexterm zone="sql-alterserver">
  <primary>ALTER SERVER</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER SERVER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER SERVER</refname>
  <refpurpose>change the definition of a foreign server</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER SERVER <replaceable class="parameter">name</replaceable> [ VERSION '<replaceable class="parameter">new_version</replaceable>' ]
    [ OPTIONS ( [ ADD | SET | DROP | INCLUDE | EXCLUDE ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ] ) ]
ALTER SERVER <replaceable class="parameter">name</replaceable> OWNER TO { <replaceable>new_owner</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
ALTER SERVER <replaceable class="parameter">name</replaceable> RENAME TO <replaceable>new_name</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER SERVER</command> changes the definition of a foreign
   server.  The first form changes the server version string or the
   generic options of the server (at least one clause is required).
   The second form changes the owner of the server.
  </para>

  <para>
   To alter the server you must be the owner of the server.
   Additionally to alter the owner, you must be able to
   <literal>SET ROLE</literal> to the new owning role, and you must
   have <literal>USAGE</literal> privilege on the server's foreign-data
   wrapper.  (Note that superusers satisfy all these criteria
   automatically.)
  </para>
 </refsect1>

 <refsect1>
  <title>Parameters</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
     <para>
      The name of an existing server.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_version</replaceable></term>
    <listitem>
     <para>
      New server version.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( [ ADD | SET | DROP | INCLUDE | EXCLUDE ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ] )</literal></term>
    <listitem>
     <para>
      Change options for the
      server.  <literal>ADD</literal>, <literal>SET</literal>, <literal>DROP</literal>,
      <literal>INCLUDE</literal> and <literal>EXCLUDE</literal> specify the action to be
      performed.  <literal>ADD</literal> is assumed if no operation is explicitly
      specified.  Option names must be unique; names and values are also validated
      using the server's foreign-data wrapper library.
     </para>

     <para>
      <literal>ADD</literal> can only be used for option names that don't already exist.
      It sets the specified name's value as provided.
     </para>

     <para>
      <literal>SET</literal> can only be used for option names that already exist.
      It overwrites the entire existing value for the specified option.
     </para>

     <para>
      <literal>DROP</literal> can only be used for option names that already exist.
      It removes the specified name from the list of OPTIONS.
     </para>

     <para>
      <literal>INCLUDE</literal> can be used regardless of whether the option name exists or not.
      If the option name doesn't exist, it acts like <literal>ADD</literal>.
      If it does exist, it adds the provided values to the existing ones.
     </para>

     <para>
      <literal>EXCLUDE</literal> can only be used for option names that already exist.
      It removes the provided values from the values of the specified option name.
      If some provided values don't exist in the option values, they won't have any effect.
      Only the values that exist in the options will be removed.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_owner</replaceable></term>
    <listitem>
     <para>
      The user name of the new owner of the foreign server.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_name</replaceable></term>
    <listitem>
     <para>
      The new name for the foreign server.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Examples</title>

  <para>
   Alter server <literal>foo</literal>, add connection options:
<programlisting>
ALTER SERVER foo OPTIONS (host 'foo', dbname 'foodb');
</programlisting>
  </para>

  <para>
   Suppose a server already contains few extensions then to add 
   more extensions into existing values use
   Alter server <literal>foo</literal>, include extensions:
<programlisting>
ALTER SERVER foo OPTIONS (INCLUDE extensions 'ext1, ext2, ext3');
</programlisting>
  </para>

  <para>
   To remove some selected values from extensions use
   Alter server <literal>foo</literal>, exclude extensions:
<programlisting>
ALTER SERVER foo OPTIONS (EXCLUDE extensions 'ext1, ext3');
</programlisting>
  </para>

  <para>
   Alter server <literal>foo</literal>, change version,
   change <literal>host</literal> option:
<programlisting>
ALTER SERVER foo VERSION '8.4' OPTIONS (SET host 'baz');
</programlisting></para>
 </refsect1>

 <refsect1>
  <title>Compatibility</title>

  <para>
   <command>ALTER SERVER</command> conforms to ISO/IEC 9075-9 (SQL/MED).
   The <literal>OWNER TO</literal> and <literal>RENAME</literal> forms are
   PostgreSQL extensions.
  </para>
 </refsect1>

 <refsect1>
  <title>See Also</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createserver"/></member>
   <member><xref linkend="sql-dropserver"/></member>
  </simplelist>
 </refsect1>

</refentry>
