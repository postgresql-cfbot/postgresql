--
-- Superusers or roles with the privileges of pg_read_all_stats members
-- can read query text and queryid
--
SELECT pg_stat_statements_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

CREATE ROLE regress_stats_user1;
CREATE ROLE regress_stats_user2;
GRANT pg_read_all_stats TO regress_stats_user2;
SET ROLE regress_stats_user1;
SELECT 1 AS "ONE";
 ONE 
-----
   1
(1 row)

-- Superuser can read query text and queryid
RESET ROLE;
SELECT
  CASE
    WHEN queryid <> 0 THEN TRUE ELSE FALSE
  END AS queryid_bool
  ,query FROM pg_stat_statements ORDER BY query COLLATE "C";
 queryid_bool |                       query                        
--------------+----------------------------------------------------
 t            | CREATE ROLE regress_stats_user1
 t            | CREATE ROLE regress_stats_user2
 t            | GRANT pg_read_all_stats TO regress_stats_user2
 t            | RESET ROLE
 t            | SELECT $1 AS "ONE"
 t            | SELECT pg_stat_statements_reset() IS NOT NULL AS t
 t            | SET ROLE regress_stats_user1
(7 rows)

--
-- regress_stats_user1 can not read query text and queryid
-- executed by other users
--
SET ROLE regress_stats_user1;
SELECT
  CASE
    WHEN queryid <> 0 THEN TRUE ELSE FALSE
  END AS queryid_bool
  ,query FROM pg_stat_statements ORDER BY query COLLATE "C";
 queryid_bool |            query             
--------------+------------------------------
 f            | <insufficient privilege>
 f            | <insufficient privilege>
 f            | <insufficient privilege>
 f            | <insufficient privilege>
 f            | <insufficient privilege>
 f            | <insufficient privilege>
 t            | SELECT $1 AS "ONE"
 t            | SET ROLE regress_stats_user1
(8 rows)

RESET ROLE;
-- regress_stats_user2 can read query text and queryid
SET ROLE regress_stats_user2;
SELECT
  CASE
    WHEN queryid <> 0 THEN TRUE ELSE FALSE
  END AS queryid_bool
  ,query FROM pg_stat_statements ORDER BY query COLLATE "C";
 queryid_bool |                            query                            
--------------+-------------------------------------------------------------
 t            | CREATE ROLE regress_stats_user1
 t            | CREATE ROLE regress_stats_user2
 t            | GRANT pg_read_all_stats TO regress_stats_user2
 t            | RESET ROLE
 t            | SELECT                                                     +
              |   CASE                                                     +
              |     WHEN queryid <> $1 THEN $2 ELSE $3                     +
              |   END AS queryid_bool                                      +
              |   ,query FROM pg_stat_statements ORDER BY query COLLATE "C"
 t            | SELECT                                                     +
              |   CASE                                                     +
              |     WHEN queryid <> $1 THEN $2 ELSE $3                     +
              |   END AS queryid_bool                                      +
              |   ,query FROM pg_stat_statements ORDER BY query COLLATE "C"
 t            | SELECT $1 AS "ONE"
 t            | SELECT pg_stat_statements_reset() IS NOT NULL AS t
 t            | SET ROLE regress_stats_user1
 t            | SET ROLE regress_stats_user2
(10 rows)

--
-- cleanup
--
RESET ROLE;
DROP ROLE regress_stats_user1;
DROP ROLE regress_stats_user2;
SELECT pg_stat_statements_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

