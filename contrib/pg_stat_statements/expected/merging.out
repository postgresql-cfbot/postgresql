--
-- Const merging functionality
--
CREATE EXTENSION pg_stat_statements;
CREATE TABLE test_merge (id int, data int);
-- IN queries
-- No merging is performed, as a baseline result
SELECT pg_stat_statements_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9);
 id | data 
----+------
(0 rows)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
 id | data 
----+------
(0 rows)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);
 id | data 
----+------
(0 rows)

SELECT query, calls FROM pg_stat_statements ORDER BY query COLLATE "C";
                                        query                                        | calls 
-------------------------------------------------------------------------------------+-------
 SELECT * FROM test_merge WHERE id IN ($1, $2, $3, $4, $5, $6, $7, $8, $9)           |     1
 SELECT * FROM test_merge WHERE id IN ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)      |     1
 SELECT * FROM test_merge WHERE id IN ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) |     1
 SELECT pg_stat_statements_reset() IS NOT NULL AS t                                  |     1
(4 rows)

-- Normal scenario, too many simple constants for an IN query
SET pg_stat_statements.query_id_const_merge = on;
SELECT pg_stat_statements_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

SELECT * FROM test_merge WHERE id IN (1);
 id | data 
----+------
(0 rows)

SELECT * FROM test_merge WHERE id IN (1, 2, 3);
 id | data 
----+------
(0 rows)

SELECT query, calls FROM pg_stat_statements ORDER BY query COLLATE "C";
                       query                        | calls 
----------------------------------------------------+-------
 SELECT * FROM test_merge WHERE id IN ($1)          |     1
 SELECT * FROM test_merge WHERE id IN (...)         |     1
 SELECT pg_stat_statements_reset() IS NOT NULL AS t |     1
(3 rows)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9);
 id | data 
----+------
(0 rows)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
 id | data 
----+------
(0 rows)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);
 id | data 
----+------
(0 rows)

SELECT query, calls FROM pg_stat_statements ORDER BY query COLLATE "C";
                                 query                                  | calls 
------------------------------------------------------------------------+-------
 SELECT * FROM test_merge WHERE id IN ($1)                              |     1
 SELECT * FROM test_merge WHERE id IN (...)                             |     4
 SELECT pg_stat_statements_reset() IS NOT NULL AS t                     |     1
 SELECT query, calls FROM pg_stat_statements ORDER BY query COLLATE "C" |     1
(4 rows)

-- More conditions in the query
SELECT pg_stat_statements_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9) and data = 2;
 id | data 
----+------
(0 rows)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) and data = 2;
 id | data 
----+------
(0 rows)

SELECT * FROM test_merge WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) and data = 2;
 id | data 
----+------
(0 rows)

SELECT query, calls FROM pg_stat_statements ORDER BY query COLLATE "C";
                          query                           | calls 
----------------------------------------------------------+-------
 SELECT * FROM test_merge WHERE id IN (...) and data = $3 |     3
 SELECT pg_stat_statements_reset() IS NOT NULL AS t       |     1
(2 rows)

-- No constants simplification
SELECT pg_stat_statements_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

SELECT * FROM test_merge WHERE id IN (1 + 1, 2 + 2, 3 + 3, 4 + 4, 5 + 5, 6 + 6, 7 + 7, 8 + 8, 9 + 9);
 id | data 
----+------
(0 rows)

SELECT query, calls FROM pg_stat_statements ORDER BY query COLLATE "C";
                                                              query                                                              | calls 
---------------------------------------------------------------------------------------------------------------------------------+-------
 SELECT * FROM test_merge WHERE id IN ($1 + $2, $3 + $4, $5 + $6, $7 + $8, $9 + $10, $11 + $12, $13 + $14, $15 + $16, $17 + $18) |     1
 SELECT pg_stat_statements_reset() IS NOT NULL AS t                                                                              |     1
(2 rows)

-- Numeric type
CREATE TABLE test_merge_numeric (id int, data numeric(5, 2));
SELECT pg_stat_statements_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

SELECT * FROM test_merge_numeric WHERE id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);
 id | data 
----+------
(0 rows)

SELECT query, calls FROM pg_stat_statements ORDER BY query COLLATE "C";
                       query                        | calls 
----------------------------------------------------+-------
 SELECT * FROM test_merge_numeric WHERE id IN (...) |     1
 SELECT pg_stat_statements_reset() IS NOT NULL AS t |     1
(2 rows)

-- Test constants evaluation, verifies a tricky part to make sure there are no
-- issues in the merging implementation
WITH cte AS (
    SELECT 'const' as const FROM test_merge
)
SELECT ARRAY['a', 'b', 'c', const::varchar] AS result
FROM cte;
 result 
--------
(0 rows)

RESET pg_stat_statements.query_id_const_merge;
