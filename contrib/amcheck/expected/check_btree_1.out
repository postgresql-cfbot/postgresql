CREATE TABLE bttest_a(id int8);
CREATE TABLE bttest_b(id int8);
CREATE TABLE bttest_multi(id int8, data int8);
CREATE TABLE delete_test_table (a bigint, b bigint, c bigint, d bigint);
-- Stabalize tests
ALTER TABLE bttest_a SET (autovacuum_enabled = false);
ALTER TABLE bttest_b SET (autovacuum_enabled = false);
ALTER TABLE bttest_multi SET (autovacuum_enabled = false);
ALTER TABLE delete_test_table SET (autovacuum_enabled = false);
INSERT INTO bttest_a SELECT * FROM generate_series(1, 100000);
INSERT INTO bttest_b SELECT * FROM generate_series(100000, 1, -1);
INSERT INTO bttest_multi SELECT i, i%2  FROM generate_series(1, 100000) as i;
CREATE INDEX bttest_a_idx ON bttest_a USING btree (id) WITH (deduplicate_items = ON);
CREATE INDEX bttest_b_idx ON bttest_b USING btree (id);
CREATE UNIQUE INDEX bttest_multi_idx ON bttest_multi
USING btree (id) INCLUDE (data);
CREATE ROLE regress_bttest_role;
-- verify permissions are checked (error due to function not callable)
SET ROLE regress_bttest_role;
SELECT bt_index_check('bttest_a_idx'::regclass);
ERROR:  permission denied for function bt_index_check
SELECT bt_index_parent_check('bttest_a_idx'::regclass);
ERROR:  permission denied for function bt_index_parent_check
RESET ROLE;
-- we, intentionally, don't check relation permissions - it's useful
-- to run this cluster-wide with a restricted account, and as tested
-- above explicit permission has to be granted for that.
GRANT EXECUTE ON FUNCTION bt_index_check(regclass) TO regress_bttest_role;
GRANT EXECUTE ON FUNCTION bt_index_parent_check(regclass) TO regress_bttest_role;
GRANT EXECUTE ON FUNCTION bt_index_check(regclass, boolean) TO regress_bttest_role;
GRANT EXECUTE ON FUNCTION bt_index_parent_check(regclass, boolean) TO regress_bttest_role;
SET ROLE regress_bttest_role;
SELECT bt_index_check('bttest_a_idx');
 bt_index_check 
----------------
 
(1 row)

SELECT bt_index_parent_check('bttest_a_idx');
 bt_index_parent_check 
-----------------------
 
(1 row)

RESET ROLE;
-- verify plain tables are rejected (error)
SELECT bt_index_check('bttest_a');
ERROR:  "bttest_a" is not an index
SELECT bt_index_parent_check('bttest_a');
ERROR:  "bttest_a" is not an index
-- verify non-existing indexes are rejected (error)
SELECT bt_index_check(17);
ERROR:  could not open relation with OID 17
SELECT bt_index_parent_check(17);
ERROR:  could not open relation with OID 17
-- verify wrong index types are rejected (error)
BEGIN;
CREATE INDEX bttest_a_brin_idx ON bttest_a USING brin(id);
SELECT bt_index_parent_check('bttest_a_brin_idx');
ERROR:  only B-Tree indexes are supported as targets for verification
DETAIL:  Relation "bttest_a_brin_idx" is not a B-Tree index.
ROLLBACK;
-- normal check outside of xact
SELECT bt_index_check('bttest_a_idx');
 bt_index_check 
----------------
 
(1 row)

-- more expansive tests
SELECT bt_index_check('bttest_a_idx', true);
 bt_index_check 
----------------
 
(1 row)

SELECT bt_index_parent_check('bttest_b_idx', true);
 bt_index_parent_check 
-----------------------
 
(1 row)

BEGIN;
SELECT bt_index_check('bttest_a_idx');
 bt_index_check 
----------------
 
(1 row)

SELECT bt_index_parent_check('bttest_b_idx');
 bt_index_parent_check 
-----------------------
 
(1 row)

-- make sure we don't have any leftover locks
SELECT * FROM pg_locks
WHERE relation = ANY(ARRAY['bttest_a', 'bttest_a_idx', 'bttest_b', 'bttest_b_idx']::regclass[])
    AND pid = pg_backend_pid();
 locktype | database | relation | page | tuple | virtualxid | transactionid | classid | objid | objsubid | virtualtransaction | pid | mode | granted | fastpath | waitstart 
----------+----------+----------+------+-------+------------+---------------+---------+-------+----------+--------------------+-----+------+---------+----------+-----------
(0 rows)

COMMIT;
-- Deduplication
TRUNCATE bttest_a;
INSERT INTO bttest_a SELECT 42 FROM generate_series(1, 2000);
SELECT bt_index_check('bttest_a_idx', true);
 bt_index_check 
----------------
 
(1 row)

-- normal check outside of xact for index with included columns
SELECT bt_index_check('bttest_multi_idx');
 bt_index_check 
----------------
 
(1 row)

-- more expansive tests for index with included columns
SELECT bt_index_parent_check('bttest_multi_idx', true, true);
 bt_index_parent_check 
-----------------------
 
(1 row)

-- repeat expansive tests for index built using insertions
TRUNCATE bttest_multi;
INSERT INTO bttest_multi SELECT i, i%2  FROM generate_series(1, 100000) as i;
SELECT bt_index_parent_check('bttest_multi_idx', true, true);
 bt_index_parent_check 
-----------------------
 
(1 row)

--
-- Test for multilevel page deletion/downlink present checks, and rootdescend
-- checks
--
INSERT INTO delete_test_table SELECT i, 1, 2, 3 FROM generate_series(1,80000) i;
ALTER TABLE delete_test_table ADD PRIMARY KEY (a,b,c,d);
-- Delete most entries, and vacuum, deleting internal pages and creating "fast
-- root"
DELETE FROM delete_test_table WHERE a < 79990;
VACUUM delete_test_table;
SELECT bt_index_parent_check('delete_test_table_pkey', true);
 bt_index_parent_check 
-----------------------
 
(1 row)

--
-- BUG #15597: must not assume consistent input toasting state when forming
-- tuple.  Bloom filter must fingerprint normalized index tuple representation.
--
CREATE TABLE toast_bug(buggy text);
ALTER TABLE toast_bug ALTER COLUMN buggy SET STORAGE extended;
CREATE INDEX toasty ON toast_bug(buggy);
-- pg_attribute entry for toasty.buggy (the index) will have plain storage:
UPDATE pg_attribute SET attstorage = 'p'
WHERE attrelid = 'toasty'::regclass AND attname = 'buggy';
-- Whereas pg_attribute entry for toast_bug.buggy (the table) still has extended storage:
SELECT attstorage FROM pg_attribute
WHERE attrelid = 'toast_bug'::regclass AND attname = 'buggy';
 attstorage 
------------
 x
(1 row)

-- Insert compressible heap tuple (comfortably exceeds TOAST_TUPLE_THRESHOLD):
INSERT INTO toast_bug SELECT repeat('a', 2200);
-- Should not get false positive report of corruption:
SELECT bt_index_check('toasty', true);
 bt_index_check 
----------------
 
(1 row)

-- UNIQUE constraint check
CREATE TABLE bttest_unique(a varchar(50), b varchar(1500), c bytea, d varchar(50));
CREATE UNIQUE INDEX bttest_unique_idx ON bttest_unique(a,b);
UPDATE pg_catalog.pg_index SET indisunique = false
WHERE indrelid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'bttest_unique');
INSERT INTO bttest_unique
	SELECT 	i::text::varchar,
			array_to_string(array(
				SELECT substr('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', ((random()*(36-1)+1)::integer), 1)
			FROM generate_series(1,1300)),'')::varchar,
	i::text::bytea, i::text::varchar
	FROM generate_series(0,1) AS i, generate_series(0,30) AS x;
UPDATE pg_catalog.pg_index SET indisunique = true
WHERE indrelid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'bttest_unique');
DELETE FROM bttest_unique WHERE ctid::text='(0,2)';
DELETE FROM bttest_unique WHERE ctid::text='(4,2)';
DELETE FROM bttest_unique WHERE ctid::text='(4,3)';
DELETE FROM bttest_unique WHERE ctid::text='(9,3)';
-- Check unique index with no uniqueness check. Should not complain.
SELECT bt_index_check('bttest_unique_idx', true);
 bt_index_check 
----------------
 
(1 row)

-- Check unique indes with uniquensee check. Should detect constraint violation cases.
SELECT bt_index_check('bttest_unique_idx', true, true);
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 0 and posting 2 (point to heap tid=(0,1) and tid=(0,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 2 and posting 3 (point to heap tid=(0,3) and tid=(0,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 3 and posting 4 (point to heap tid=(0,4) and tid=(0,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 4 and posting 5 (point to heap tid=(0,5) and tid=(0,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 5 and tid=(1,3) posting 0 (point to heap tid=(0,6) and tid=(1,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 0 and posting 1 (point to heap tid=(1,1) and tid=(1,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 1 and posting 2 (point to heap tid=(1,2) and tid=(1,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 2 and posting 3 (point to heap tid=(1,3) and tid=(1,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 3 and posting 4 (point to heap tid=(1,4) and tid=(1,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 4 and posting 5 (point to heap tid=(1,5) and tid=(1,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 5 and tid=(1,4) posting 0 (point to heap tid=(1,6) and tid=(2,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 0 and posting 1 (point to heap tid=(2,1) and tid=(2,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 1 and posting 2 (point to heap tid=(2,2) and tid=(2,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 2 and posting 3 (point to heap tid=(2,3) and tid=(2,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 3 and posting 4 (point to heap tid=(2,4) and tid=(2,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 4 and posting 5 (point to heap tid=(2,5) and tid=(2,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 5 and tid=(1,5) posting 0 (point to heap tid=(2,6) and tid=(3,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 0 and posting 1 (point to heap tid=(3,1) and tid=(3,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 1 and posting 2 (point to heap tid=(3,2) and tid=(3,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 2 and posting 3 (point to heap tid=(3,3) and tid=(3,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 3 and posting 4 (point to heap tid=(3,4) and tid=(3,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 4 and posting 5 (point to heap tid=(3,5) and tid=(3,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 5 and tid=(1,6) posting 0 (point to heap tid=(3,6) and tid=(4,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,6) posting 0 and posting 3 (point to heap tid=(4,1) and tid=(4,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,6) posting 3 and posting 4 (point to heap tid=(4,4) and tid=(4,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,6) posting 4 and posting 5 (point to heap tid=(4,5) and tid=(4,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,6) posting 5 and tid=(2,2) (point to heap tid=(4,6) and tid=(5,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 0 and posting 1 (point to heap tid=(5,2) and tid=(5,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 1 and posting 2 (point to heap tid=(5,3) and tid=(5,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 2 and posting 3 (point to heap tid=(5,4) and tid=(5,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 3 and posting 4 (point to heap tid=(5,5) and tid=(5,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 4 and posting 5 (point to heap tid=(5,6) and tid=(6,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 5 and tid=(4,2) posting 0 (point to heap tid=(6,1) and tid=(6,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 0 and posting 1 (point to heap tid=(6,2) and tid=(6,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 1 and posting 2 (point to heap tid=(6,3) and tid=(6,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 2 and posting 3 (point to heap tid=(6,4) and tid=(6,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 3 and posting 4 (point to heap tid=(6,5) and tid=(6,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 4 and posting 5 (point to heap tid=(6,6) and tid=(7,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 5 and tid=(4,3) posting 0 (point to heap tid=(7,1) and tid=(7,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 0 and posting 1 (point to heap tid=(7,2) and tid=(7,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 1 and posting 2 (point to heap tid=(7,3) and tid=(7,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 2 and posting 3 (point to heap tid=(7,4) and tid=(7,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 3 and posting 4 (point to heap tid=(7,5) and tid=(7,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 4 and posting 5 (point to heap tid=(7,6) and tid=(8,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 5 and tid=(4,4) posting 0 (point to heap tid=(8,1) and tid=(8,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 0 and posting 1 (point to heap tid=(8,2) and tid=(8,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 1 and posting 2 (point to heap tid=(8,3) and tid=(8,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 2 and posting 3 (point to heap tid=(8,4) and tid=(8,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 3 and posting 4 (point to heap tid=(8,5) and tid=(8,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 4 and posting 5 (point to heap tid=(8,6) and tid=(9,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 5 and tid=(4,5) posting 0 (point to heap tid=(9,1) and tid=(9,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 0 and posting 2 (point to heap tid=(9,2) and tid=(9,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 2 and posting 3 (point to heap tid=(9,4) and tid=(9,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 3 and posting 4 (point to heap tid=(9,5) and tid=(9,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 4 and posting 5 (point to heap tid=(9,6) and tid=(10,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 5 and tid=(4,6) (point to heap tid=(10,1) and tid=(10,2)).
ERROR:  index "bttest_unique_idx" is corrupted. There are tuples violating UNIQUE constraint
DETAIL:  Details are in the previous log messages under WARNING priority
VACUUM bttest_unique;
SELECT bt_index_check('bttest_unique_idx', true, true);
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 0 and posting 1 (point to heap tid=(0,1) and tid=(0,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 1 and posting 2 (point to heap tid=(0,3) and tid=(0,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 2 and posting 3 (point to heap tid=(0,4) and tid=(0,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 3 and posting 4 (point to heap tid=(0,5) and tid=(0,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,2) posting 4 and tid=(1,3) posting 0 (point to heap tid=(0,6) and tid=(1,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 0 and posting 1 (point to heap tid=(1,1) and tid=(1,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 1 and posting 2 (point to heap tid=(1,2) and tid=(1,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 2 and posting 3 (point to heap tid=(1,3) and tid=(1,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 3 and posting 4 (point to heap tid=(1,4) and tid=(1,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 4 and posting 5 (point to heap tid=(1,5) and tid=(1,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,3) posting 5 and tid=(1,4) posting 0 (point to heap tid=(1,6) and tid=(2,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 0 and posting 1 (point to heap tid=(2,1) and tid=(2,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 1 and posting 2 (point to heap tid=(2,2) and tid=(2,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 2 and posting 3 (point to heap tid=(2,3) and tid=(2,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 3 and posting 4 (point to heap tid=(2,4) and tid=(2,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 4 and posting 5 (point to heap tid=(2,5) and tid=(2,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,4) posting 5 and tid=(1,5) posting 0 (point to heap tid=(2,6) and tid=(3,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 0 and posting 1 (point to heap tid=(3,1) and tid=(3,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 1 and posting 2 (point to heap tid=(3,2) and tid=(3,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 2 and posting 3 (point to heap tid=(3,3) and tid=(3,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 3 and posting 4 (point to heap tid=(3,4) and tid=(3,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 4 and posting 5 (point to heap tid=(3,5) and tid=(3,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,5) posting 5 and tid=(1,6) posting 0 (point to heap tid=(3,6) and tid=(4,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,6) posting 0 and posting 1 (point to heap tid=(4,1) and tid=(4,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,6) posting 1 and posting 2 (point to heap tid=(4,4) and tid=(4,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,6) posting 2 and posting 3 (point to heap tid=(4,5) and tid=(4,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(1,6) posting 3 and tid=(2,2) (point to heap tid=(4,6) and tid=(5,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 0 and posting 1 (point to heap tid=(5,2) and tid=(5,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 1 and posting 2 (point to heap tid=(5,3) and tid=(5,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 2 and posting 3 (point to heap tid=(5,4) and tid=(5,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 3 and posting 4 (point to heap tid=(5,5) and tid=(5,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 4 and posting 5 (point to heap tid=(5,6) and tid=(6,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,1) posting 5 and tid=(4,2) posting 0 (point to heap tid=(6,1) and tid=(6,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 0 and posting 1 (point to heap tid=(6,2) and tid=(6,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 1 and posting 2 (point to heap tid=(6,3) and tid=(6,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 2 and posting 3 (point to heap tid=(6,4) and tid=(6,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 3 and posting 4 (point to heap tid=(6,5) and tid=(6,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 4 and posting 5 (point to heap tid=(6,6) and tid=(7,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,2) posting 5 and tid=(4,3) posting 0 (point to heap tid=(7,1) and tid=(7,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 0 and posting 1 (point to heap tid=(7,2) and tid=(7,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 1 and posting 2 (point to heap tid=(7,3) and tid=(7,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 2 and posting 3 (point to heap tid=(7,4) and tid=(7,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 3 and posting 4 (point to heap tid=(7,5) and tid=(7,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 4 and posting 5 (point to heap tid=(7,6) and tid=(8,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,3) posting 5 and tid=(4,4) posting 0 (point to heap tid=(8,1) and tid=(8,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 0 and posting 1 (point to heap tid=(8,2) and tid=(8,3)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 1 and posting 2 (point to heap tid=(8,3) and tid=(8,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 2 and posting 3 (point to heap tid=(8,4) and tid=(8,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 3 and posting 4 (point to heap tid=(8,5) and tid=(8,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 4 and posting 5 (point to heap tid=(8,6) and tid=(9,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,4) posting 5 and tid=(4,5) posting 0 (point to heap tid=(9,1) and tid=(9,2)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 0 and posting 1 (point to heap tid=(9,2) and tid=(9,4)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 1 and posting 2 (point to heap tid=(9,4) and tid=(9,5)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 2 and posting 3 (point to heap tid=(9,5) and tid=(9,6)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 3 and posting 4 (point to heap tid=(9,6) and tid=(10,1)).
WARNING:  index uniqueness is violated for index "bttest_unique_idx": Index tid=(4,5) posting 4 and tid=(4,6) (point to heap tid=(10,1) and tid=(10,2)).
ERROR:  index "bttest_unique_idx" is corrupted. There are tuples violating UNIQUE constraint
DETAIL:  Details are in the previous log messages under WARNING priority
-- cleanup
DROP TABLE bttest_a;
DROP TABLE bttest_b;
DROP TABLE bttest_multi;
DROP TABLE delete_test_table;
DROP TABLE toast_bug;
DROP TABLE bttest_unique;
DROP OWNED BY regress_bttest_role; -- permissions
DROP ROLE regress_bttest_role;
