Parsed test spec with 2 sessions

starting permutation: rdtbl sto locktbl
step rdtbl: SELECT * FROM accounts;
accountid|balance
---------+-------
checking |    600
savings  |    600
(2 rows)

step sto: SET statement_timeout = '10ms';
step locktbl: LOCK TABLE accounts; <waiting ...>
step locktbl: <... completed>
ERROR:  canceling statement due to statement timeout

starting permutation: rdtbl lto locktbl
step rdtbl: SELECT * FROM accounts;
accountid|balance
---------+-------
checking |    600
savings  |    600
(2 rows)

step lto: SET lock_timeout = '10ms';
step locktbl: LOCK TABLE accounts; <waiting ...>
step locktbl: <... completed>
ERROR:  canceling statement due to lock timeout

starting permutation: rdtbl lsto locktbl
step rdtbl: SELECT * FROM accounts;
accountid|balance
---------+-------
checking |    600
savings  |    600
(2 rows)

step lsto: SET lock_timeout = '10ms'; SET statement_timeout = '10s';
step locktbl: LOCK TABLE accounts; <waiting ...>
step locktbl: <... completed>
ERROR:  canceling statement due to lock timeout

starting permutation: rdtbl slto locktbl
step rdtbl: SELECT * FROM accounts;
accountid|balance
---------+-------
checking |    600
savings  |    600
(2 rows)

step slto: SET lock_timeout = '10s'; SET statement_timeout = '10ms';
step locktbl: LOCK TABLE accounts; <waiting ...>
step locktbl: <... completed>
ERROR:  canceling statement due to statement timeout

starting permutation: wrtbl sto update
step wrtbl: UPDATE accounts SET balance = balance + 100;
step sto: SET statement_timeout = '10ms';
step update: DELETE FROM accounts WHERE accountid = 'checking'; <waiting ...>
step update: <... completed>
ERROR:  canceling statement due to statement timeout

starting permutation: wrtbl lto update
step wrtbl: UPDATE accounts SET balance = balance + 100;
step lto: SET lock_timeout = '10ms';
step update: DELETE FROM accounts WHERE accountid = 'checking'; <waiting ...>
step update: <... completed>
ERROR:  canceling statement due to lock timeout

starting permutation: wrtbl lsto update
step wrtbl: UPDATE accounts SET balance = balance + 100;
step lsto: SET lock_timeout = '10ms'; SET statement_timeout = '10s';
step update: DELETE FROM accounts WHERE accountid = 'checking'; <waiting ...>
step update: <... completed>
ERROR:  canceling statement due to lock timeout

starting permutation: wrtbl slto update
step wrtbl: UPDATE accounts SET balance = balance + 100;
step slto: SET lock_timeout = '10s'; SET statement_timeout = '10ms';
step update: DELETE FROM accounts WHERE accountid = 'checking'; <waiting ...>
step update: <... completed>
ERROR:  canceling statement due to statement timeout

starting permutation: tsto sleep0 sleep1000
step tsto: SET transaction_timeout = '30ms'; SET statement_timeout = '10s';
step sleep0: SELECT pg_sleep(0.0001)
pg_sleep
--------
        
(1 row)

step sleep1000: SELECT pg_sleep(1000) <waiting ...>
step sleep1000: <... completed>
ERROR:  canceling statement due to transaction timeout

starting permutation: stto sleep1000
step stto: SET transaction_timeout = '10s'; SET statement_timeout = '10ms';
step sleep1000: SELECT pg_sleep(1000) <waiting ...>
step sleep1000: <... completed>
ERROR:  canceling statement due to statement timeout
