Parsed test spec with 4 sessions

starting permutation: s3_start_create_index s1_start_upsert s4_wakeup_define_index_before_set_valid s2_start_upsert s4_wakeup_s1_from_invalidate_catalog_snapshot s4_wakeup_s2 s4_wakeup_s1
injection_points_attach
-----------------------
                       
(1 row)

injection_points_attach
-----------------------
                       
(1 row)

injection_points_attach
-----------------------
                       
(1 row)

step s3_start_create_index: CREATE UNIQUE INDEX CONCURRENTLY tbl_pkey_duplicate ON test.tbl(i); <waiting ...>
step s1_start_upsert: INSERT INTO test.tbl VALUES(13,now()) on conflict(i) do update set updated_at = now(); <waiting ...>
step s4_wakeup_define_index_before_set_valid: 
	SELECT injection_points_wakeup('define_index_before_set_valid');
	SELECT injection_points_detach('define_index_before_set_valid');

injection_points_wakeup
-----------------------
                       
(1 row)

injection_points_detach
-----------------------
                       
(1 row)

step s3_start_create_index: <... completed>
step s2_start_upsert: INSERT INTO test.tbl VALUES(13,now()) on conflict(i) do update set updated_at = now(); <waiting ...>
step s4_wakeup_s1_from_invalidate_catalog_snapshot: 
	SELECT injection_points_wakeup('invalidate_catalog_snapshot_end');
	SELECT injection_points_detach('invalidate_catalog_snapshot_end');

injection_points_wakeup
-----------------------
                       
(1 row)

injection_points_detach
-----------------------
                       
(1 row)

step s4_wakeup_s2: 
	SELECT injection_points_wakeup('exec_insert_before_insert_speculative');
	SELECT injection_points_detach('exec_insert_before_insert_speculative');

injection_points_wakeup
-----------------------
                       
(1 row)

injection_points_detach
-----------------------
                       
(1 row)

step s2_start_upsert: <... completed>
step s4_wakeup_s1: 
	SELECT injection_points_wakeup('check_exclusion_or_unique_constraint_no_conflict');
	SELECT injection_points_detach('check_exclusion_or_unique_constraint_no_conflict');

injection_points_wakeup
-----------------------
                       
(1 row)

injection_points_detach
-----------------------
                       
(1 row)

step s1_start_upsert: <... completed>
