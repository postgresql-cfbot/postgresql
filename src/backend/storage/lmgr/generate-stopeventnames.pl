#!/usr/bin/perl
#
# Generate stopeventnames.h and stopeventnames.c from stopeventnames.txt
# Copyright (c) 2020, PostgreSQL Global Development Group

use strict;
use warnings;

my $continue    = "\n";

open my $stopeventnames, '<', $ARGV[0] or die;

# Include PID in suffix in case parallel make runs this multiple times.
my $htmp = "stopeventnames.h.tmp$$";
my $ctmp = "stopeventnames.c.tmp$$";
open my $h, '>', $htmp or die "Could not open $htmp: $!";
open my $c, '>', $ctmp or die "Could not open $ctmp: $!";

my $autogen =
  "/* autogenerated from src/backend/storage/lmgr/stopeventnames.txt, do not edit */\n";
print $h $autogen;
print $h "/* there is deliberately not an #ifndef STOPEVENTNAMES_H here */\n\n";
print $c $autogen, "\n";

print $c "const char *const stopeventnames[] = {";

my $eventidx = 0;
while (<$stopeventnames>)
{
	chomp;

	# Skip comments
	next if /^#/;
	next if /^\s*$/;

	die "unable to parse stopeventnames.txt"
	  unless /^(\w+)$/;

	my $eventname = $1;

	my $trimmedeventname = $eventname;
	$trimmedeventname =~ s/StopEvent$//;
	die "event names must end with 'StopEvent'" if $trimmedeventname eq $eventname;

	printf $c "%s	\"%s\"", $continue, $trimmedeventname;
	$continue    = ",\n";

	print $h "#define $eventname $eventidx\n";
	$eventidx++;
}

printf $c "\n};\n";
print $h "\n";
printf $h "#define NUM_BUILTIN_STOPEVENTS		%s\n", $eventidx;

close $h;
close $c;

rename($htmp, 'stopeventnames.h') || die "rename: $htmp: $!";
rename($ctmp, 'stopeventnames.c') || die "rename: $ctmp: $!";

close $stopeventnames;
