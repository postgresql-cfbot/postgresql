CREATE EXTENSION bytea_plperlu CASCADE;
NOTICE:  installing required extension "plperlu"
CREATE FUNCTION cat_bytea(bytea) RETURNS bytea LANGUAGE plperlu
 TRANSFORM FOR TYPE bytea
 AS $$
    return $_[0];
 $$;
SELECT data = cat_bytea(data)
    FROM (
        SELECT decode(repeat(unnest(ARRAY[ 'a','abc', 'abcd', 'abcdefgh\000ijkl12' , '爱' ]), 10000), 'escape') data
    ) line;
 ?column? 
----------
 t
 t
 t
 t
 t
(5 rows)

CREATE FUNCTION perlu_inverse_bytes(bytea) RETURNS bytea
TRANSFORM FOR TYPE bytea
AS $$
	return join '', reverse split('', $_[0]);
$$ LANGUAGE plperlu;
SELECT 'ξενία'::bytea, perlu_inverse_bytes('ξενία'::bytea);
         bytea          |  perlu_inverse_bytes   
------------------------+------------------------
 \xcebeceb5cebdceafceb1 | \xb1ceafcebdceb5cebece
(1 row)

CREATE FUNCTION plperlu_bytea_overload() RETURNS bytea LANGUAGE plperlu
 TRANSFORM FOR TYPE bytea
 AS $$
   package StringOverload { use overload '""' => sub { "stuff" }; }
   return bless {}, "StringOverload";
 $$;
SELECT encode(plperlu_bytea_overload(), 'escape') string;
 string 
--------
 stuff
(1 row)

DROP EXTENSION plperlu CASCADE;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to extension bytea_plperlu
drop cascades to function cat_bytea(bytea)
drop cascades to function perlu_inverse_bytes(bytea)
drop cascades to function plperlu_bytea_overload()
