-- predictability
SET synchronous_commit = on;
SELECT 'init' FROM pg_create_logical_replication_slot('regression_slot', 'test_decoding');
 ?column? 
----------
 init
(1 row)

SELECT 'msg1' FROM pg_logical_emit_message(true, 'test', 'msg1');
 ?column? 
----------
 msg1
(1 row)

SELECT 'msg2' FROM pg_logical_emit_message(false, 'test', 'msg2');
 ?column? 
----------
 msg2
(1 row)

BEGIN;
SELECT 'msg3' FROM pg_logical_emit_message(true, 'test', 'msg3');
 ?column? 
----------
 msg3
(1 row)

SELECT 'msg4' FROM pg_logical_emit_message(false, 'test', 'msg4');
 ?column? 
----------
 msg4
(1 row)

ROLLBACK;
BEGIN;
SELECT 'msg5' FROM pg_logical_emit_message(true, 'test', 'msg5');
 ?column? 
----------
 msg5
(1 row)

SELECT 'msg6' FROM pg_logical_emit_message(false, 'test', 'msg6');
 ?column? 
----------
 msg6
(1 row)

SELECT 'msg7' FROM pg_logical_emit_message(true, 'test', 'msg7');
 ?column? 
----------
 msg7
(1 row)

COMMIT;
SELECT 'ignorethis' FROM pg_logical_emit_message(true, 'test', 'czechtastic');
  ?column?  
------------
 ignorethis
(1 row)

SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'force-binary', '0', 'skip-empty-xacts', '1');
                                data                                
--------------------------------------------------------------------
 message: transactional: 1 prefix: test, sz: 4 content:msg1
 message: transactional: 0 prefix: test, sz: 4 content:msg2
 message: transactional: 0 prefix: test, sz: 4 content:msg4
 message: transactional: 0 prefix: test, sz: 4 content:msg6
 message: transactional: 1 prefix: test, sz: 4 content:msg5
 message: transactional: 1 prefix: test, sz: 4 content:msg7
 message: transactional: 1 prefix: test, sz: 11 content:czechtastic
(7 rows)

-- test db filtering
\set prevdb :DBNAME
\c template1
SELECT 'otherdb1' FROM pg_logical_emit_message(false, 'test', 'otherdb1');
 ?column? 
----------
 otherdb1
(1 row)

SELECT 'otherdb2' FROM pg_logical_emit_message(true, 'test', 'otherdb2');
 ?column? 
----------
 otherdb2
(1 row)

\c :prevdb
SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'force-binary', '0', 'skip-empty-xacts', '1');
 data 
------
(0 rows)

-- no data in this table, but emit logical INSERT/UPDATE/DELETE for it
CREATE TABLE dummy(i int, t text, n numeric, primary key(t));
SELECT pg_logical_emit_insert('dummy', row(1, 'one', 0.1)::dummy) <> '0/0'::pg_lsn;
 ?column? 
----------
 t
(1 row)

SELECT pg_logical_emit_insert('dummy', row(2, 'two', 0.2)::dummy) <> '0/0'::pg_lsn;
 ?column? 
----------
 t
(1 row)

SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'force-binary', '0', 'skip-empty-xacts', '1', 'include-xids', '0');
                                 data                                  
-----------------------------------------------------------------------
 BEGIN
 table public.dummy: INSERT: i[integer]:1 t[text]:'one' n[numeric]:0.1
 COMMIT
 BEGIN
 table public.dummy: INSERT: i[integer]:2 t[text]:'two' n[numeric]:0.2
 COMMIT
(6 rows)

SELECT * FROM dummy;
 i | t | n 
---+---+---
(0 rows)

SELECT pg_logical_emit_delete('dummy', row(12, 'twelve', 0.12)::dummy) <> '0/0'::pg_lsn;
 ?column? 
----------
 t
(1 row)

SELECT pg_logical_emit_update('dummy', row(15, 'fifteen', 0.15)::dummy,
       row(16, 'sixteen', 0.16)::dummy) <> '0/0'::pg_lsn;
 ?column? 
----------
 t
(1 row)

SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'force-binary', '0', 'skip-empty-xacts', '1', 'include-xids', '0');
                                                       data                                                        
-------------------------------------------------------------------------------------------------------------------
 BEGIN
 table public.dummy: DELETE: t[text]:'twelve'
 COMMIT
 BEGIN
 table public.dummy: UPDATE: old-key: t[text]:'fifteen' new-tuple: i[integer]:16 t[text]:'sixteen' n[numeric]:0.16
 COMMIT
(6 rows)

ALTER TABLE dummy REPLICA IDENTITY NOTHING;
SELECT pg_logical_emit_delete('dummy', row(12, 'twelve', 0.12)::dummy) <> '0/0'::pg_lsn;
 ?column? 
----------
 t
(1 row)

SELECT pg_logical_emit_update('dummy', row(15, 'fifteen', 0.15)::dummy,
       row(16, 'sixteen', 0.16)::dummy) <> '0/0'::pg_lsn;
 ?column? 
----------
 t
(1 row)

SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'force-binary', '0', 'skip-empty-xacts', '1', 'include-xids', '0');
                                    data                                     
-----------------------------------------------------------------------------
 BEGIN
 table public.dummy: DELETE: (no-tuple-data)
 COMMIT
 BEGIN
 table public.dummy: UPDATE: i[integer]:16 t[text]:'sixteen' n[numeric]:0.16
 COMMIT
(6 rows)

SELECT pg_logical_emit_truncate(ARRAY['dummy'], true, false) <> '0/0'::pg_lsn;
 ?column? 
----------
 t
(1 row)

SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'force-binary', '0', 'skip-empty-xacts', '1', 'include-xids', '0');
                 data                  
---------------------------------------
 BEGIN
 table public.dummy: TRUNCATE: cascade
 COMMIT
(3 rows)

CREATE UNLOGGED TABLE dummy_u(i int, t text, n numeric, primary key (t));
-- return invalid
SELECT pg_logical_emit_insert('dummy_u', row(7, 'seven', 0.7)::dummy_u);
 pg_logical_emit_insert 
------------------------
 0/0
(1 row)

-- return invalid
SELECT pg_logical_emit_update('dummy_u', row(7, 'seven', 0.7)::dummy_u,
       row(11, 'eleven', 0.11)::dummy_u);
 pg_logical_emit_update 
------------------------
 0/0
(1 row)

-- return invalid
SELECT pg_logical_emit_update('dummy_u', row(NULL, 'seven', 0.7)::dummy_u,
       row(11, 'eleven', 0.11)::dummy_u);
 pg_logical_emit_update 
------------------------
 0/0
(1 row)

-- error
SELECT pg_logical_emit_update('dummy_u', row(7, NULL, 0.7)::dummy_u,
       row(11, 'eleven', 0.11)::dummy_u);
ERROR:  replica identity column is NULL
-- return invalid
SELECT pg_logical_emit_delete('dummy_u', row(7, 'seven', 0.7)::dummy_u);
 pg_logical_emit_delete 
------------------------
 0/0
(1 row)

-- error
SELECT pg_logical_emit_delete('dummy_u', row(7, NULL, 0.7)::dummy_u);
ERROR:  replica identity column is NULL
-- return invalid
SELECT pg_logical_emit_truncate(ARRAY['dummy_u'], false, false);
 pg_logical_emit_truncate 
--------------------------
 0/0
(1 row)

SELECT pg_logical_emit_truncate(ARRAY['dummy','dummy_u'], false, true) <> '0/0'::pg_lsn;
 ?column? 
----------
 t
(1 row)

SELECT data FROM pg_logical_slot_get_changes('regression_slot', NULL, NULL, 'force-binary', '0', 'skip-empty-xacts', '1', 'include-xids', '0');
ERROR:  could not open relation with OID 1663
DROP TABLE dummy;
DROP TABLE dummy_u;
SELECT 'cleanup' FROM pg_drop_replication_slot('regression_slot');
 ?column? 
----------
 cleanup
(1 row)

