--
-- COPY TO JSON
--
CREATE EXTENSION pg_copy_json;
-- test copying in JSON format with various styles
-- of embedded line ending characters
create temp table copytest (
	style	text,
	test 	text,
	filler	int);
insert into copytest values('DOS',E'abc\r\ndef',1);
insert into copytest values('Unix',E'abc\ndef',2);
insert into copytest values('Mac',E'abc\rdef',3);
insert into copytest values(E'esc\\ape',E'a\\r\\\r\\\n\\nb',4);
copy copytest to stdout with (format 'json');
{"style":"DOS","test":"abc\r\ndef","filler":1}
{"style":"Unix","test":"abc\ndef","filler":2}
{"style":"Mac","test":"abc\rdef","filler":3}
{"style":"esc\\ape","test":"a\\r\\\r\\\n\\nb","filler":4}
-- pg_copy_json do not support COPY FROM
copy copytest from stdout with (format 'json');
ERROR:  cannot use JSON mode in COPY FROM
-- test copying in JSON format with various styles
-- of embedded escaped characters
create temp table copyjsontest (
    id bigserial,
    f1 text,
    f2 timestamptz);
insert into copyjsontest
  select g.i,
         CASE WHEN g.i % 2 = 0 THEN
           'line with '' in it: ' || g.i::text
         ELSE
           'line with " in it: ' || g.i::text
         END,
         'Mon Feb 10 17:32:01 1997 PST'
  from generate_series(1,5) as g(i);
insert into copyjsontest (f1) values
(E'aaa\"bbb'::text),
(E'aaa\\bbb'::text),
(E'aaa\/bbb'::text),
(E'aaa\bbbb'::text),
(E'aaa\fbbb'::text),
(E'aaa\nbbb'::text),
(E'aaa\rbbb'::text),
(E'aaa\tbbb'::text);
copy copyjsontest to stdout with (format 'json');
{"id":1,"f1":"line with \" in it: 1","f2":"1997-02-10T17:32:01-08:00"}
{"id":2,"f1":"line with ' in it: 2","f2":"1997-02-10T17:32:01-08:00"}
{"id":3,"f1":"line with \" in it: 3","f2":"1997-02-10T17:32:01-08:00"}
{"id":4,"f1":"line with ' in it: 4","f2":"1997-02-10T17:32:01-08:00"}
{"id":5,"f1":"line with \" in it: 5","f2":"1997-02-10T17:32:01-08:00"}
{"id":1,"f1":"aaa\"bbb","f2":null}
{"id":2,"f1":"aaa\\bbb","f2":null}
{"id":3,"f1":"aaa/bbb","f2":null}
{"id":4,"f1":"aaa\bbbb","f2":null}
{"id":5,"f1":"aaa\fbbb","f2":null}
{"id":6,"f1":"aaa\nbbb","f2":null}
{"id":7,"f1":"aaa\rbbb","f2":null}
{"id":8,"f1":"aaa\tbbb","f2":null}
-- test force array
copy copytest to stdout (format 'json', force_array);
[
 {"style":"DOS","test":"abc\r\ndef","filler":1}
,{"style":"Unix","test":"abc\ndef","filler":2}
,{"style":"Mac","test":"abc\rdef","filler":3}
,{"style":"esc\\ape","test":"a\\r\\\r\\\n\\nb","filler":4}
]
copy copytest to stdout (format 'json', force_array true);
[
 {"style":"DOS","test":"abc\r\ndef","filler":1}
,{"style":"Unix","test":"abc\ndef","filler":2}
,{"style":"Mac","test":"abc\rdef","filler":3}
,{"style":"esc\\ape","test":"a\\r\\\r\\\n\\nb","filler":4}
]
copy copytest to stdout (format 'json', force_array false);
{"style":"DOS","test":"abc\r\ndef","filler":1}
{"style":"Unix","test":"abc\ndef","filler":2}
{"style":"Mac","test":"abc\rdef","filler":3}
{"style":"esc\\ape","test":"a\\r\\\r\\\n\\nb","filler":4}
