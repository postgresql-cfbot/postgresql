\set HIDE_COLUMN_ENCRYPTION false
CREATE ROLE regress_enc_user1;
CREATE COLUMN MASTER KEY cmk1 WITH (
    realm = 'test'
);
COMMENT ON COLUMN MASTER KEY cmk1 IS 'column master key';
CREATE COLUMN MASTER KEY cmk1a WITH (
    realm = 'test'
);
CREATE COLUMN MASTER KEY cmk2 WITH (
    realm = 'test2'
);
CREATE COLUMN MASTER KEY cmk2a WITH (
    realm = 'testx'
);
ALTER COLUMN MASTER KEY cmk2a (realm = 'test2');
CREATE COLUMN ENCRYPTION KEY fail WITH VALUES (
    column_master_key = cmk1,
    algorithm = 'foo',  -- invalid
    encrypted_value = '\xDEADBEEF'
);
ERROR:  unrecognized encryption algorithm: foo
CREATE COLUMN ENCRYPTION KEY cek1 WITH VALUES (
    column_master_key = cmk1,
    algorithm = 'RSAES_OAEP_SHA_1',
    encrypted_value = '\xDEADBEEF'
);
COMMENT ON COLUMN ENCRYPTION KEY cek1 IS 'column encryption key';
ALTER COLUMN ENCRYPTION KEY cek1 ADD VALUE (
    column_master_key = cmk1a,
    algorithm = 'RSAES_OAEP_SHA_1',
    encrypted_value = '\xDEADBEEF'
);
-- duplicate
ALTER COLUMN ENCRYPTION KEY cek1 ADD VALUE (
    column_master_key = cmk1a,
    algorithm = 'RSAES_OAEP_SHA_1',
    encrypted_value = '\xDEADBEEF'
);
ERROR:  column encryption key "cek1" already has data for master key "cmk1a"
ALTER COLUMN ENCRYPTION KEY fail ADD VALUE (
    column_master_key = cmk1a,
    algorithm = 'RSAES_OAEP_SHA_1',
    encrypted_value = '\xDEADBEEF'
);
ERROR:  column encryption key "fail" does not exist
CREATE COLUMN ENCRYPTION KEY cek2 WITH VALUES (
    column_master_key = cmk2,
    algorithm = 'RSAES_OAEP_SHA_1',
    encrypted_value = '\xDEADBEEF'
),
(
    column_master_key = cmk2a,
    algorithm = 'RSAES_OAEP_SHA_1',
    encrypted_value = '\xDEADBEEF'
);
CREATE COLUMN ENCRYPTION KEY cek4 WITH VALUES (
    column_master_key = cmk1,
    algorithm = 'RSAES_OAEP_SHA_1',
    encrypted_value = '\xDEADBEEF'
);
CREATE TABLE tbl_fail (
    a int,
    b text,
    c text ENCRYPTED WITH (column_encryption_key = notexist)
);
ERROR:  column encryption key "notexist" does not exist
CREATE TABLE tbl_fail (
    a int,
    b text,
    c text ENCRYPTED WITH (column_encryption_key = cek1, algorithm = 'foo')
);
ERROR:  unrecognized encryption algorithm: foo
CREATE TABLE tbl_fail (
    a int,
    b text,
    c text ENCRYPTED WITH (column_encryption_key = cek1, encryption_type = wrong)
);
ERROR:  unrecognized encryption type: wrong
CREATE TABLE tbl_29f3 (
    a int,
    b text,
    c text ENCRYPTED WITH (column_encryption_key = cek1)
);
\d tbl_29f3
              Table "public.tbl_29f3"
 Column |  Type   | Collation | Nullable | Default 
--------+---------+-----------+----------+---------
 a      | integer |           |          | 
 b      | text    |           |          | 
 c      | text    |           |          | 

\d+ tbl_29f3
                                        Table "public.tbl_29f3"
 Column |  Type   | Collation | Nullable | Default | Storage  | Encryption | Stats target | Description 
--------+---------+-----------+----------+---------+----------+------------+--------------+-------------
 a      | integer |           |          |         | plain    |            |              | 
 b      | text    |           |          |         | extended |            |              | 
 c      | text    |           |          |         | external | cek1       |              | 

CREATE TABLE tbl_447f (
    a int,
    b text
);
ALTER TABLE tbl_447f ADD COLUMN c text ENCRYPTED WITH (column_encryption_key = cek1);
\d tbl_447f
              Table "public.tbl_447f"
 Column |  Type   | Collation | Nullable | Default 
--------+---------+-----------+----------+---------
 a      | integer |           |          | 
 b      | text    |           |          | 
 c      | text    |           |          | 

\d+ tbl_447f
                                        Table "public.tbl_447f"
 Column |  Type   | Collation | Nullable | Default | Storage  | Encryption | Stats target | Description 
--------+---------+-----------+----------+---------+----------+------------+--------------+-------------
 a      | integer |           |          |         | plain    |            |              | 
 b      | text    |           |          |         | extended |            |              | 
 c      | text    |           |          |         | external | cek1       |              | 

DROP COLUMN MASTER KEY cmk1 RESTRICT;  -- fail
ERROR:  cannot drop column master key cmk1 because other objects depend on it
DETAIL:  column encryption key cek1 data for master key cmk1 depends on column master key cmk1
column encryption key cek4 data for master key cmk1 depends on column master key cmk1
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
ALTER COLUMN MASTER KEY cmk2 RENAME TO cmk3;
ALTER COLUMN MASTER KEY cmk1 RENAME TO cmk3;  -- fail
ERROR:  column master key "cmk3" already exists
ALTER COLUMN MASTER KEY cmkx RENAME TO cmky;  -- fail
ERROR:  column master key "cmkx" does not exist
ALTER COLUMN ENCRYPTION KEY cek2 RENAME TO cek3;
ALTER COLUMN ENCRYPTION KEY cek1 RENAME TO cek3;  -- fail
ERROR:  column encryption key "cek3" already exists
ALTER COLUMN ENCRYPTION KEY cekx RENAME TO ceky;  -- fail
ERROR:  column encryption key "cekx" does not exist
SET SESSION AUTHORIZATION 'regress_enc_user1';
DROP COLUMN ENCRYPTION KEY cek3;  -- fail
ERROR:  must be owner of column encryption key cek3
DROP COLUMN MASTER KEY cmk3;  -- fail
ERROR:  must be owner of column master key cmk3
RESET SESSION AUTHORIZATION;
ALTER COLUMN MASTER KEY cmk3 OWNER TO regress_enc_user1;
ALTER COLUMN ENCRYPTION KEY cek3 OWNER TO regress_enc_user1;
SET SESSION AUTHORIZATION 'regress_enc_user1';
DROP COLUMN ENCRYPTION KEY cek3;  -- ok now
DROP COLUMN MASTER KEY cmk3;  -- ok now
RESET SESSION AUTHORIZATION;
ALTER COLUMN ENCRYPTION KEY cek1 DROP VALUE (column_master_key = cmk1a);
ALTER COLUMN ENCRYPTION KEY cek1 DROP VALUE (column_master_key = cmk1a);  -- fail
ERROR:  column encryption key "cek1" has no data for master key "cmk1a"
ALTER COLUMN ENCRYPTION KEY cek1 DROP VALUE (column_master_key = fail);  -- fail
ERROR:  column master key "fail" does not exist
ALTER COLUMN ENCRYPTION KEY cek1 DROP VALUE (column_master_key = cmk1a, algorithm = 'foo');  -- fail
ERROR:  attribute "algorithm" must not be specified
DROP COLUMN ENCRYPTION KEY cek4;
DROP COLUMN ENCRYPTION KEY fail;
ERROR:  column encryption key "fail" does not exist
DROP COLUMN ENCRYPTION KEY IF EXISTS nonexistent;
NOTICE:  column encryption key "nonexistent" does not exist, skipping
DROP COLUMN MASTER KEY cmk1a;
DROP COLUMN MASTER KEY fail;
ERROR:  column master key "fail" does not exist
DROP COLUMN MASTER KEY IF EXISTS nonexistent;
NOTICE:  column master key "nonexistent" does not exist, skipping
DROP ROLE regress_enc_user1;
